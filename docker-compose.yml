version: "3.9"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cbtc
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      PORT: 4000
      CORS_ORIGIN: ${FRONTEND_URL}
    ports:
      - "${BACKEND_PORT:-4000}:4000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
      - backend_node_modules:/app/node_modules
    command: npm run dev
    restart: unless-stopped

  frontend:
    build: ./frontend
    environment:
      NEXT_PUBLIC_API_URL: ${BACKEND_URL}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    command: npm run dev
    restart: unless-stopped

volumes:
  dbdata:
  backend_node_modules:
  frontend_node_modules:
