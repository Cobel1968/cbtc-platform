'use client';\n\nimport { useState } from 'react';\nimport { api } from '@/lib/api';\n\ninterface PaymentModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  program: {\n    id: string;\n    title: string;\n    price: number;\n  };\n  onPaymentSuccess: () => void;\n}\n\nexport default function PaymentModal({ isOpen, onClose, program, onPaymentSuccess }: PaymentModalProps) {\n  const [paymentMethod, setPaymentMethod] = useState<'wave' | 'pos'>('wave');\n  const [loading, setLoading] = useState(false);\n  const [wavePhone, setWavePhone] = useState('');\n  const [posData, setPosData] = useState({\n    customerName: '',\n    cashierName: '',\n    terminalId: 'CBTC-001',\n    location: 'Abidjan Centre'\n  });\n  const [paymentResult, setPaymentResult] = useState<any>(null);\n\n  if (!isOpen) return null;\n\n  const handleWavePayment = async () => {\n    setLoading(true);\n    try {\n      const response = await api('/api/payments/wave/initiate', {\n        method: 'POST',\n        body: JSON.stringify({\n          programId: program.id,\n          customerPhone: wavePhone,\n          amount: program.price\n        })\n      });\n\n      setPaymentResult(response);\n      \n      if (response.success) {\n        // Show instructions to user\n        alert('Instructions Wave envoy√©es! V√©rifiez votre t√©l√©phone.');\n      }\n    } catch (error) {\n      console.error('Wave payment error:', error);\n      alert('Erreur paiement Wave');\n    }\n    setLoading(false);\n  };\n\n  const handlePOSPayment = async () => {\n    setLoading(true);\n    try {\n      const response = await api('/api/payments/pos/cash', {\n        method: 'POST',\n        body: JSON.stringify({\n          programId: program.id,\n          amount: program.price,\n          ...posData\n        })\n      });\n\n      setPaymentResult(response);\n      \n      if (response.success) {\n        alert(`Paiement confirm√©! Re√ßu: ${response.receiptNumber}`);\n        onPaymentSuccess();\n      }\n    } catch (error) {\n      console.error('POS payment error:', error);\n      alert('Erreur paiement POS');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-8 max-w-md w-full mx-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-900\">üí≥ Paiement</h2>\n          <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n            ‚úï\n          </button>\n        </div>\n\n        <div className=\"mb-6\">\n          <h3 className=\"font-semibold text-lg mb-2\">{program.title}</h3>\n          <p className=\"text-2xl font-bold text-indigo-600\">\n            {program.price.toLocaleString()} XOF\n          </p>\n        </div>\n\n        {/* Payment Method Selection */}\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n            M√©thode de paiement\n          </label>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <button\n              onClick={() => setPaymentMethod('wave')}\n              className={`p-4 border rounded-lg text-center ${\n                paymentMethod === 'wave'\n                  ? 'border-indigo-500 bg-indigo-50 text-indigo-700'\n                  : 'border-gray-300 hover:border-gray-400'\n              }`}\n            >\n              <div className=\"text-2xl mb-2\">üì±</div>\n              <div className=\"font-medium\">Wave Money</div>\n              <div className=\"text-xs text-gray-500\">Mobile Payment</div>\n            </button>\n            \n            <button\n              onClick={() => setPaymentMethod('pos')}\n              className={`p-4 border rounded-lg text-center ${\n                paymentMethod === 'pos'\n                  ? 'border-indigo-500 bg-indigo-50 text-indigo-700'\n                  : 'border-gray-300 hover:border-gray-400'\n              }`}\n            >\n              <div className=\"text-2xl mb-2\">üíµ</div>\n              <div className=\"font-medium\">Comptoir</div>\n              <div className=\"text-xs text-gray-500\">Cash POS</div>\n            </button>\n          </div>\n        </div>\n\n        {/* Wave Payment Form */}\n        {paymentMethod === 'wave' && (\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Votre num√©ro Wave\n            </label>\n            <input\n              type=\"tel\"\n              value={wavePhone}\n              onChange={(e) => setWavePhone(e.target.value)}\n              placeholder=\"+225 XX XX XX XX XX\"\n              className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n            />\n            <p className=\"text-xs text-gray-500 mt-2\">\n              üí∞ Paiement vers: <strong>+2250555007884</strong> (CBTC)\n            </p>\n          </div>\n        )}\n\n        {/* POS Payment Form */}\n        {paymentMethod === 'pos' && (\n          <div className=\"space-y-4 mb-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Nom du client\n              </label>\n              <input\n                type=\"text\"\n                value={posData.customerName}\n                onChange={(e) => setPosData({...posData, customerName: e.target.value})}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Caissier\n              </label>\n              <input\n                type=\"text\"\n                value={posData.cashierName}\n                onChange={(e) => setPosData({...posData, cashierName: e.target.value})}\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-3\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Terminal\n                </label>\n                <select\n                  value={posData.terminalId}\n                  onChange={(e) => setPosData({...posData, terminalId: e.target.value})}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n                >\n                  <option value=\"CBTC-001\">CBTC-001</option>\n                  <option value=\"CBTC-002\">CBTC-002</option>\n                  <option value=\"CBTC-MOBILE-01\">CBTC-MOBILE-01</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Localisation\n                </label>\n                <select\n                  value={posData.location}\n                  onChange={(e) => setPosData({...posData, location: e.target.value})}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500\"\n                >\n                  <option value=\"Abidjan Centre\">Abidjan Centre</option>\n                  <option value=\"Cocody\">Cocody</option>\n                  <option value=\"Marcory\">Marcory</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Payment Result Display */}\n        {paymentResult && (\n          <div className={`mb-6 p-4 rounded-lg ${\n            paymentResult.success ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'\n          }`}>\n            <div className={`font-medium ${\n              paymentResult.success ? 'text-green-800' : 'text-red-800'\n            }`}>\n              {paymentResult.message || paymentResult.error}\n            </div>\n            \n            {paymentResult.success && paymentMethod === 'wave' && (\n              <div className=\"mt-3 text-sm text-green-700\">\n                <div><strong>Transaction:</strong> {paymentResult.transactionId}</div>\n                <div><strong>R√©f√©rence:</strong> {paymentResult.reference}</div>\n                <pre className=\"mt-2 text-xs bg-green-100 p-2 rounded whitespace-pre-wrap\">\n                  {paymentResult.instructions}\n                </pre>\n              </div>\n            )}\n            \n            {paymentResult.success && paymentMethod === 'pos' && (\n              <div className=\"mt-3 text-sm text-green-700\">\n                <div><strong>Re√ßu:</strong> {paymentResult.receiptNumber}</div>\n                <div><strong>Facture:</strong> {paymentResult.invoiceNumber}</div>\n                <div><strong>Terminal:</strong> {paymentResult.terminal?.id} - {paymentResult.terminal?.location}</div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex gap-3\">\n          <button\n            onClick={onClose}\n            className=\"flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\n          >\n            Annuler\n          </button>\n          \n          <button\n            onClick={paymentMethod === 'wave' ? handleWavePayment : handlePOSPayment}\n            disabled={loading || (paymentMethod === 'wave' && !wavePhone) || (paymentMethod === 'pos' && (!posData.customerName || !posData.cashierName))}\n            className=\"flex-1 px-4 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {loading ? '‚è≥ Traitement...' : paymentMethod === 'wave' ? 'üì± Payer Wave' : 'üíµ Payer Comptoir'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"
